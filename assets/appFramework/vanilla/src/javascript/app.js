/**
 * Main application class.
 *
 * @export
 * @class App
 */
import {Child} from "./child/child";

export class App {
    /**
     * Run the application
     * @returns {void}
     */
    run() {
        this._root = document.getElementById("root");
        this._routerContent = document.createElement("div");
        this._navContent = document.createElement("div");

        this._root.appendChild(this._routerContent);
        this._root.appendChild(document.createElement("hr"));
        this._root.appendChild(this._navContent);

        this._router = [
            { route: "", title: "Child", module: () => new Child() }
        ];

        this._router.forEach((route) => {
            const link = document.createElement("a");
            link.href = `#/${route.route}`;
            link.text = route.title;
            this._navContent.appendChild(link);
            this._navContent.appendChild(document.createTextNode(" "));
        });

        this.locationChanged();
        window.addEventListener("popstate", () => this.locationChanged());
    }

    /**
     * The application location has changed try and locate a new module to display
     * @returns {void}
     */
    locationChanged() {
        const lookupRoute = (window.location.hash || "").replace(/^#\//, "");

        let foundRoute = this._router.find((testRoute) => lookupRoute === testRoute.route);
        if (!foundRoute && this._router.length > 0) {
            foundRoute = this._router.find((testRoute) => testRoute.route === "");
        }
        if (foundRoute) {
            if (this._currentModule && this._currentModule.detached) {
                this._currentModule.detached();
            }
            while (this._routerContent.hasChildNodes()) {
                this._routerContent.removeChild(this._routerContent.lastChild);
            }
            this._currentModule = foundRoute.module();
            if (this._currentModule.render) {
                this._currentModule.render(this._routerContent);
            }
            if (this._currentModule.attached) {
                this._currentModule.attached();
            }
        }
    }
}

/* Generated by UniteJS */
