function loadAndWaitForReactPage (url, timeout) {
    return browser.get(url).then(() => {
        return browser.wait(protractor.ExpectedConditions.and(protractor.ExpectedConditions.presenceOf($("#root")),
            () => {
                return $("#root").getText()
                    .then((text) => {
                        return text && text.length > 0;
                    });
            }), timeout ? timeout : 5000);
    });
}

exports.setup = function (config) {
    browser.ignoreSynchronization = true;
    browser.loadAndWaitForReactPage = loadAndWaitForReactPage;
};

/* Generated by UniteJS */

