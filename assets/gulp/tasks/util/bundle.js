/**
 * Gulp utils for bundling.
 */

function getPathKeys (uniteConfig) {
    const pathKeys = [];
    const keys = Object.keys(uniteConfig.clientPackages);

    for (let i = 0; i < keys.length; i++) {
        const pkg = uniteConfig.clientPackages[keys[i]];
        if (pkg.includeMode === "app" || pkg.includeMode === "both") {
            pathKeys.push(keys[i]);
        }
    }

    return pathKeys;
}

function createPaths (uniteConfig) {
    const paths = {};
    const keys = Object.keys(uniteConfig.clientPackages);

    for (let i = 0; i < keys.length; i++) {
        const pkg = uniteConfig.clientPackages[keys[i]];
        if (pkg.includeMode === "app" || pkg.includeMode === "both") {
            paths[keys[i]] = `node_modules/${keys[i]}/${pkg.main.replace(/\.\//, "")}`;
        }
    }

    return paths;
}

/* eslint-disable no-unused-vars */
function createPackages (uniteConfig) {
    const packages = {};

    return packages;
}

function createPreload (uniteConfig) {
    const preload = [];
    const keys = Object.keys(uniteConfig.clientPackages);

    for (let i = 0; i < keys.length; i++) {
        const pkg = uniteConfig.clientPackages[keys[i]];
        if (pkg.includeMode === "app" || pkg.includeMode === "both") {
            if (pkg.preload) {
                preload.push(keys[i]);
            }
        }
    }

    return preload;
}

module.exports = {
    createPackages,
    createPaths,
    createPreload,
    getPathKeys
};

/* Generated by UniteJS */
