/**
 * Gulp tasks for building JavaScript.
 */
const display = require("./util/display");
const uc = require("./util/unite-config");
const gulp = require("gulp");
const path = require("path");
const del = require("del");
const rename = require("gulp-rename");
const replace = require("gulp-replace");
const runSequence = require("run-sequence");
const packageJson = require("../../package.json");
require("./build-transpile");
require("./build-bundle-app");
require("./build-bundle-vendor");
require("./build-lint");
require("./build-css");
require("./build-css-post");

gulp.task("build-clean", (callback) => {
    const uniteConfig = uc.getUniteConfig();
    const toClean = [
        path.join(uniteConfig.directories.dist, "**/!(app-module-config).js"),
        path.join(uniteConfig.directories.cssDist, "**/*"),
        "./index.html"
    ];
    display.info("Cleaning", toClean);
    return del(toClean, callback);
});

gulp.task("build-copy-index", () => {
    const uniteConfig = uc.getUniteConfig();
    const buildConfiguration = uc.getBuildConfiguration();

    const cacheBust = buildConfiguration.bundle ? `?v=${new Date().getTime()}` : "";
    const uniteJs = {
        "config": buildConfiguration.variables,
        "packageVersion": packageJson.version,
        "uniteVersion": uniteConfig.uniteVersion
    };
    const config = `window.unite = ${JSON.stringify(uniteJs)};`;

    return gulp.src(buildConfiguration.bundle ? "./index-bundle.html" : "./index-no-bundle.html")
        .pipe(replace("{CACHEBUST}", cacheBust))
        .pipe(replace("{UNITECONFIG}", config))
        .pipe(rename("index.html"))
        .pipe(gulp.dest("./"));
});

gulp.task("build-post-clean", (callback) => {
    const uniteConfig = uc.getUniteConfig();

    const toClean = [];

    if (uniteConfig.cssPost === "None") {
        toClean.push(path.join(uniteConfig.directories.cssDist, "**/main.css"));
    } else {
        toClean.push(path.join(uniteConfig.directories.cssDist, "**/!(style).css"));
    }
    display.info("Cleaning", toClean);
    return del(toClean, callback);
});

gulp.task("build", (cb) => {
    runSequence("build-clean", "build-transpile", "build-lint", "build-css", "build-css-post", "build-bundle-vendor", "build-bundle-app", "build-copy-index", "build-post-clean", cb);
});

/* Generated by UniteJS */
