/**
 * Gulp tasks for building theme favicons.
 */
const gulp = require("gulp");
const themeUtils = require("./util/theme-utils");
const uc = require("./util/unite-config");
const path = require("path");
const display = require("./util/display");
const runSequence = require("run-sequence");
const del = require("del");

gulp.task("theme-clean", (callback) => {
    const uniteConfig = uc.getUniteConfig();
    const toClean = [
        path.join(uniteConfig.directories.assets, "favicon/**/*")
    ];
    display.info("Cleaning", toClean);
    return del(toClean, callback);
});


gulp.task("theme-favicons", (cb) => {
    const uniteConfig = uc.getUniteConfig();
    const uniteThemeConfig = uc.getUniteThemeConfig();

    const favIconDirectory = path.join(uniteConfig.directories.assets, "favicon");

    display.info("Generating", "Fav Icons");

    themeUtils.generateFavIcons(uniteConfig, uniteThemeConfig, favIconDirectory, (success) => {
        if (success) {
            cb();
        } else {
            process.exit(1);
        }
    });
});

gulp.task("theme-browser-config", (cb) => {
    const uniteConfig = uc.getUniteConfig();
    const uniteThemeConfig = uc.getUniteThemeConfig();

    display.info("Generating", "browserconfig.xml");

    themeUtils.buildBrowserConfig(uniteConfig, uniteThemeConfig, (success) => {
        if (success) {
            cb();
        } else {
            process.exit(1);
        }
    });
});

gulp.task("theme-manifest-json", (cb) => {
    const uniteConfig = uc.getUniteConfig();
    const uniteThemeConfig = uc.getUniteThemeConfig();

    display.info("Generating", "manifest.json");

    themeUtils.buildManifestJson(uniteConfig, uniteThemeConfig, (success) => {
        if (success) {
            cb();
        } else {
            process.exit(1);
        }
    });
});

gulp.task("theme-headers", (cb) => {
    const uniteConfig = uc.getUniteConfig();
    const uniteThemeConfig = uc.getUniteThemeConfig();

    display.info("Generating", "theme headers");

    themeUtils.buildThemeHeaders(uniteConfig, uniteThemeConfig, (success) => {
        if (success) {
            uc.setUniteThemeConfig(uniteThemeConfig, cb);
        } else {
            process.exit(1);
        }
    });
});

gulp.task("theme-build", (cb) => {
    runSequence("theme-clean", "theme-favicons", "theme-browser-config", "theme-manifest-json", "theme-headers", cb);
});
/* Generated by UniteJS */
