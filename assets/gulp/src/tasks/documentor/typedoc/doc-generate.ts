/**
 * Gulp tasks for producing typedoc documentation.
 */
import * as fs from "fs";
import * as glob from "glob";
import * as gulp from "gulp";
import * as path from "path";
import * as typedoc from "typedoc";
import * as util from "util";
import * as asyncUtil from "../../util/async-util";
import * as display from "../../util/display";
import * as uc from "../../util/unite-config";

gulp.task("doc-generate", async () => {
    display.info("Generating", "TypeDoc");

    const uniteConfig = await uc.getUniteConfig();

    const tsConfigFilename = path.join(process.cwd(), "./typedoc.json");
    const tsConfigExists = await asyncUtil.fileExists(tsConfigFilename);

    let typeDocConfig: typedoc.ProjectReflection;
    if (tsConfigExists) {
        const tsConfigContents = await util.promisify(fs.readFile)(tsConfigFilename);
        typeDocConfig = JSON.parse(tsConfigContents.toString());
    }

    const app = new typedoc.Application(typeDocConfig);

    const globAsync = util.promisify<string, string[]>(glob);
    const files = await globAsync(path.join(uniteConfig.dirs.www.src, `**/*.${uc.extensionMap(uniteConfig.sourceExtensions)}`));

    app.generateDocs(files, "../docs");
    if (app.logger.hasErrors()) {
        process.exit(1);
    }
});

// Generated by UniteJS
