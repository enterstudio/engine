/**
 * Gulp tasks for building theme favicons.
 */
import * as del from "del";
import * as gulp from "gulp";
import * as path from "path";
import * as runSequence from "run-sequence";
import * as util from "util";
import * as display from "./util/display";
import * as packageConfig from "./util/package-config";
import * as themeUtils from "./util/theme-utils";
import * as uc from "./util/unite-config";

gulp.task("theme-clean", async () => {
    const uniteConfig = await uc.getUniteConfig();

    const toClean = [
        path.join(uniteConfig.dirs.www.assets, "favicon/**/*")
    ];
    display.info("Cleaning", toClean);
    return del(toClean);
});

gulp.task("theme-favicons", async () => {
    display.info("Generating", "Fav Icons");
    const uniteConfig = await uc.getUniteConfig();
    const uniteThemeConfig = await uc.getUniteThemeConfig(uniteConfig);

    const favIconDirectory = path.join(uniteConfig.dirs.www.assets, "favicon");

    return themeUtils.generateFavIcons(uniteConfig, uniteThemeConfig, favIconDirectory);
});

gulp.task("theme-browser-config", async () => {
    display.info("Generating", "browserconfig.xml");
    const uniteConfig = await uc.getUniteConfig();

    const uniteThemeConfig = await uc.getUniteThemeConfig(uniteConfig);

    return themeUtils.buildBrowserConfig(uniteConfig, uniteThemeConfig);
});

gulp.task("theme-manifest-json", async () => {
    display.info("Generating", "manifest.json");
    const uniteConfig = await uc.getUniteConfig();

    const uniteThemeConfig = await uc.getUniteThemeConfig(uniteConfig);
    const packageJson = await packageConfig.getPackageJson();

    return themeUtils.buildManifestJson(uniteConfig, uniteThemeConfig, packageJson);
});

gulp.task("theme-headers", async () => {
    display.info("Generating", "theme headers");
    const uniteConfig = await uc.getUniteConfig();

    const uniteThemeConfig = await uc.getUniteThemeConfig(uniteConfig);

    await themeUtils.buildThemeHeaders(uniteConfig, uniteThemeConfig);

    return uc.setUniteThemeConfig(uniteConfig, uniteThemeConfig);
});

gulp.task("theme-build", async () => {
    try {
        await util.promisify(runSequence)(
            "theme-clean",
            "theme-favicons",
            "theme-browser-config",
            "theme-manifest-json",
            "theme-headers"
        );
    } catch (err) {
        display.error("Unhandled error during task", err);
        process.exit(1);
    }
});
// Generated by UniteJS
