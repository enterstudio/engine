const electron = require("electron");
const path = require("path");
const url = require("url");

// Module to control application life.
const app = electron.app;
// Module to create native browser window.
const BrowserWindow = electron.BrowserWindow;

// Keep a global reference of the window object, if you don't, the window will
// Be closed automatically when the JavaScript object is garbage collected.
let mainWindow = null;

let mainOptions = {
    "width": 1024,
    "height": 768,
    "showDevTools": false,
    "startUrl": path.join(__dirname, "index.html")
};

function setOptions (options) {
    mainOptions = Object.assign(mainOptions, options);
}

function createWindow () {
    if (mainWindow === null) {
        // Create the browser window.
        mainWindow = new BrowserWindow({
            "width": mainOptions.width,
            "height": mainOptions.height,
            "webPreferences": {
                "nodeIntegration": false
            }
        });

        // And load the index.html of the app.
        mainWindow.loadURL(url.format({
            "pathname": mainOptions.startUrl,
            "protocol": "file:",
            "slashes": true
        }));

        if (mainOptions.showDevTools) {
            // Open the DevTools.
            mainWindow.webContents.openDevTools();
        }

        // Emitted when the window is closed.
        mainWindow.on("closed", () => {
            // Dereference the window object, usually you would store windows
            // In an array if your app supports multi windows, this is the time
            // When you should delete the corresponding element.
            mainWindow = null;
        });
    }
}

// This method will be called when Electron has finished
// Initialization and is ready to create browser windows.
// Some APIs can only be used after this event occurs.
app.on("ready", createWindow);

// Quit when all windows are closed.
app.on("window-all-closed", () => {
    // On OS X it is common for applications and their menu bar
    // To stay active until the user quits explicitly with Cmd + Q
    if (process.platform !== "darwin" && app) {
        app.quit();
    }
});

// On OS X it's common to re-create a window in the app when the
// Dock icon is clicked and there are no other windows open.
app.on("activate", createWindow);

// In this file you can include the rest of your app's specific main process
// Code. You can also put them in separate files and require them here.

module.exports = {
    setOptions
};

// Generated by UniteJS
